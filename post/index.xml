<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Shih-Chin</title>
    <link>http://shihchinw.github.io/post.html</link>
    <description>Recent content in Posts on Shih-Chin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© Shih-Chin</copyright>
    <lastBuildDate>Tue, 30 Oct 2018 22:48:23 +0800</lastBuildDate>
    
	<atom:link href="http://shihchinw.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Interpolation with Radial Basis Functions (RBFs)</title>
      <link>http://shihchinw.github.io/2018/10/data-interpolation-with-radial-basis-functions-rbfs.html</link>
      <pubDate>Tue, 30 Oct 2018 22:48:23 +0800</pubDate>
      
      <guid>http://shihchinw.github.io/2018/10/data-interpolation-with-radial-basis-functions-rbfs.html</guid>
      <description>&lt;p&gt;Radial Basis Functions (RBFs) is one of the commonly used methods to interpolate multi-dimensional data. RBFs creates smooth and less oscillating interpolation than inverse distance weighting (IDW) does. It has many applications in Computer Graphics, such as surface reconstruction [&lt;a href=&#34;#ref.3&#34;&gt;3&lt;/a&gt;], animation blending [&lt;a href=&#34;#ref.1&#34;&gt;1&lt;/a&gt;], facial retargeting, color calibration [&lt;a href=&#34;#ref.4&#34;&gt;4&lt;/a&gt;], and etc. Despite of the variety of its applications, those applications all have a common theme called &lt;em&gt;scattered data interpolation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aperture &amp; f-number</title>
      <link>http://shihchinw.github.io/2018/08/aperture-f-number.html</link>
      <pubDate>Fri, 10 Aug 2018 08:23:35 +0800</pubDate>
      
      <guid>http://shihchinw.github.io/2018/08/aperture-f-number.html</guid>
      <description>&lt;p&gt;I have been using DSLR for over 10 years, I thought I knew few knowledge about photography. But after I watched a wonderful online course of digital photography by Prof. Marc Levoy [&lt;a href=&#34;#ref.1&#34;&gt;1&lt;/a&gt;], I just found there were so many details I weren&amp;rsquo;t aware before. The thing embarrassed me the most was that I incorrectly related f-number to lens aperture size. This post is trying to introduce the idea of f-number starting from scene radiance.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Self-Study Tips</title>
      <link>http://shihchinw.github.io/2017/01/self-study-tips.html</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2017/01/self-study-tips.html</guid>
      <description>&lt;p&gt;When I decided to be a guest lecturer at NCKU last year, I kept asking myself what is the most important thing I wish I&amp;rsquo;d learned in school. I carefully reviewed my current skill sets and found most of my skills were developed at work. Besides sharing knowledge about Computer Graphics, I think there is a more fundamental competency we need to develop in school, that is &lt;span class=&#34;green&#34;&gt;&lt;strong&gt;continuous learning&lt;/strong&gt;&lt;/span&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Learning by Teaching, as a Guest Lecturer</title>
      <link>http://shihchinw.github.io/2016/12/learning-by-teaching-as-a-guest-lecturer.html</link>
      <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2016/12/learning-by-teaching-as-a-guest-lecturer.html</guid>
      <description>&lt;p&gt;I was privileged to be a guest lecturer to give five lectures about Computer Graphics at National Cheng Kung University (NCKU) in Taiwan. When I prepared the course materials, I deeply realized again that the best way to learn a topic is to teach someone else (especially to a person who never heard about Computer Graphics before). In order to avoid teaching wrong ideas, I had carefully reviewed what I known from ground up and derived each mathematical equation in the textbooks. This post is about what I&amp;rsquo;ve learned in those few months.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Realistic Human Skin with Normalized Diffusion &amp; GGX</title>
      <link>http://shihchinw.github.io/2015/12/realistic-human-skin-with-normalized-diffusion-ggx.html</link>
      <pubDate>Fri, 25 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/12/realistic-human-skin-with-normalized-diffusion-ggx.html</guid>
      <description>After implementing BSSRDF importance sampling for Normalized Diffusion and GGX BRDF, I started wondering how realistic could the appearance of human skin be achieved with the combination of these two models. The whole development process is quite interesting, because it&amp;rsquo;s a perfect combination of my two interests: programming and photography. With only one diffusion layer and two specular layers on top, I tried to find the way to make it as realistic as possible.</description>
    </item>
    
    <item>
      <title>BSSRDF Importance Sampling of Normalized Diffusion</title>
      <link>http://shihchinw.github.io/2015/10/bssrdf-importance-sampling-of-normalized-diffusion.html</link>
      <pubDate>Tue, 27 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/10/bssrdf-importance-sampling-of-normalized-diffusion.html</guid>
      <description>Highly scattering materials like milk or skin can&amp;rsquo;t be precisely modeled by BRDF only, because light would scatter multiple times before exiting the material at different locations. Bidirectional surface scattering distribution function (BSSRDF) is used to describe radiance transfer across the surface boundary with diffusion profile for multiple scattering events.
To solve subsurface light transport efficiently, there are several approaches to model and evaluate the diffusion profile. Recently, Burley [5] has proposed an artist-friendly diffusion profile with only two exponential functions and the most attracting thing is that it&amp;rsquo;s not only intuitive for artists to use but also faster to evaluate.</description>
    </item>
    
    <item>
      <title>Using Min Pixel Width with Care in Arnold</title>
      <link>http://shihchinw.github.io/2015/09/using-min-pixel-width-with-care-in-arnold.html</link>
      <pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/09/using-min-pixel-width-with-care-in-arnold.html</guid>
      <description>Keeping objects opaque makes Arnold render much faster. When we render a bunch of hairs, min pixel width is useful to make the hair look softer. However, if the min pixel width is not equal to zero, the opacity of hair ribbon would change subtly, and those ribbons are not always opaque anymore! Furthermore, according to the ribbon thickness measured in screen space at render time, we might surprisedly get different render results.</description>
    </item>
    
    <item>
      <title>Sampling Visible Normals for GGX BRDF</title>
      <link>http://shihchinw.github.io/2015/08/sampling-visible-normals-for-ggx-brdf.html</link>
      <pubDate>Sun, 23 Aug 2015 22:49:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/08/sampling-visible-normals-for-ggx-brdf.html</guid>
      <description>The standard approach proposed by Walter et al. [1] for importance sampling of GGX BRDF is to use the PDF proportional to distribution of microfacet normal \(D(\omega)\). However, \(D(\omega)\) is not view-dependent, thus it would waste lots of samples when the incoming direction is near grazing angles. In addition, the small value of \(D(\omega)\vert m\cdot n\vert\) at grazing angle would make the sample value as high as hundreds to millions in some situations and cause fireflies in render results.</description>
    </item>
    
    <item>
      <title>Implementing Disney Principled BRDF in Arnold</title>
      <link>http://shihchinw.github.io/2015/07/implementing-disney-principled-brdf-in-arnold.html</link>
      <pubDate>Sun, 19 Jul 2015 16:05:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/07/implementing-disney-principled-brdf-in-arnold.html</guid>
      <description>Disney &amp;ldquo;principled&amp;rdquo; BRDF [1] is a very interesting shading model. It can achieve various physically plausible appearances with only one color parameter and ten scalar parameters! This shading model is designed not only to catch most of the measured data from MERL, but also to follow the principles below:
  Intuitive rather than physical. As few parameters as possible. Parameters are zero to one over their plausible range. Parameters are allowed to be pushed beyond their plausible range where it makes sense.</description>
    </item>
    
    <item>
      <title>Implementing GGX BRDF in Arnold with Multiple Importance Sampling</title>
      <link>http://shihchinw.github.io/2015/06/implementing-ggx-brdf-in-arnold-with-multiple-importance-sampling.html</link>
      <pubDate>Sun, 28 Jun 2015 15:20:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/06/implementing-ggx-brdf-in-arnold-with-multiple-importance-sampling.html</guid>
      <description>Monte Carlo path tracing has a slow convergence rate close to \(O(1/\sqrt n)\), it needs to quadruple the number of samples to halve the error. Many mainstream production renderers have deployed multiple importance sampling (MIS) technique to reduce the variance of sampling result (i.e. the noise in image). If we want to make our custom material shader efficiently executed along with the entire render scene in Arnold, we shall definitely consider exploiting the power of MIS.</description>
    </item>
    
    <item>
      <title>Quick Start Guide for PySide in Maya</title>
      <link>http://shihchinw.github.io/2015/05/quick-start-guide-for-pyside-in-maya.html</link>
      <pubDate>Sat, 02 May 2015 18:34:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/05/quick-start-guide-for-pyside-in-maya.html</guid>
      <description>&lt;p&gt;The goal of tool-making is to make users do certain works more efficiently. A functional tool with poor designed interface would not be fully utilized by users, because users aren&amp;rsquo;t willing to use that tool if the interaction makes them feel frustrated.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Assign Custom Shapes&#39; Components to Sets in Maya</title>
      <link>http://shihchinw.github.io/2015/04/assign-custom-shapes-components-to-sets-in-maya.html</link>
      <pubDate>Tue, 21 Apr 2015 23:01:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/04/assign-custom-shapes-components-to-sets-in-maya.html</guid>
      <description>Recently, I tried to extend the functionalities of GPU cache in Maya with dag item selection and shader assignment. In order to achieve the seamless integration, the idea is to use face component to represent each dag item within the Alembic cache. Therefore, users can select the dag item from the cache in component mode and assign those components to a shader.
This idea is pretty simple, but the implementation is not as easy as it sounds.</description>
    </item>
    
    <item>
      <title>Render Tips for Arnold in Maya</title>
      <link>http://shihchinw.github.io/2015/02/render-tips-for-arnold-in-maya.html</link>
      <pubDate>Sun, 22 Feb 2015 16:39:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2015/02/render-tips-for-arnold-in-maya.html</guid>
      <description>&lt;p&gt;All photo-realistic ray-tracers are trying to solve the &lt;a href=&#34;http://www.wired.com/2010/07/st_equation_3danimation/&#34;&gt;rendering equation&lt;/a&gt;. Although they are all categorized as ray-tracer instead of rasterizer, the infrastructure of each implementations are quite different (i.e. uni-directional vs. bi-directional, pure path tracing vs. works with photon-map or &lt;a href=&#34;http://cgg.mff.cuni.cz/~jaroslav/papers/2008-irradiance_caching_class/&#34;&gt;irradiance caching&lt;/a&gt;, etc).&lt;/p&gt;

&lt;p&gt;Arnold is an &lt;em&gt;un-bias uni-directional path tracer&lt;/em&gt; with a remarkable importance sampling mechanism and great memory management to achieve amazing performance excellence. However, if we blindly increase the number of ray samples for every render scene, we would not always get a cleaner imagery. Which means that when we switch from one ray-tracer to another, we had better use different strategies to adjust render settings. Here is the summary about what I&amp;rsquo;ve learned from experience, hope it would help any Arnold user. :)
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building AbcExport/AbcImport on Windows</title>
      <link>http://shihchinw.github.io/2013/06/building-abcexport-abcimport-on-windows.html</link>
      <pubDate>Sat, 01 Jun 2013 10:25:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2013/06/building-abcexport-abcimport-on-windows.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://code.google.com/p/alembic/&#34;&gt;Alembic&lt;/a&gt; is a popular data format for geometry cache nowadays, however, there are no simple workflow to build the AbcImport/AbcExport on windows. In this post, I tried to demonstrate a building flow as simple as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.google.com/file/d/0B3FnMqIdd-iLN0czVE1mTl9oWUE/edit?usp=sharing&#34;&gt;Here&lt;/a&gt; is the pre-built binaries for Maya 2013 x64.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Insert checking routine right before file opening in Maya</title>
      <link>http://shihchinw.github.io/2012/12/insert-checking-routine-right-before-file-opening-in-maya.html</link>
      <pubDate>Tue, 25 Dec 2012 22:58:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2012/12/insert-checking-routine-right-before-file-opening-in-maya.html</guid>
      <description>ScriptJob is a very convenient approach for us to register a routine for certain event. However, when we want to inject a check routine for an opened file and to be capable of canceling the open operation of the invalid file. We will find that ScriptJob only contains NewSceneOpened, PostSceneRead and SceneOpened, &amp;hellip;, and none of these events can abort the current operation within our registered routine. Fortunately, the MSceneMessage from API could help us achieve our purpose:</description>
    </item>
    
    <item>
      <title>Sorting is FUN</title>
      <link>http://shihchinw.github.io/2012/12/sorting-is-fun.html</link>
      <pubDate>Sat, 15 Dec 2012 12:15:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2012/12/sorting-is-fun.html</guid>
      <description>Since few artist friends of mine want to learn about computer programming, thus we formed a small python learning group, we call it PyClub, in our office. Recently at our PyClub, I introduced some sorting algorithms by demonstrating with poker cards. It&amp;rsquo;s especially fun for all of us to sort a deck of cards manually with quicksort algorithm, and we all felt the power of divide-and-conquer at that moment!</description>
    </item>
    
    <item>
      <title>Building PySide for Maya 2012 on Windows</title>
      <link>http://shihchinw.github.io/2012/05/building-pyside-for-maya-2012-on-windows.html</link>
      <pubDate>Sun, 27 May 2012 00:26:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2012/05/building-pyside-for-maya-2012-on-windows.html</guid>
      <description>&lt;p&gt;One of my friend received some tools developed in PySide for Maya recently. He tried to copy the latest pre-built binaries of PySide into Maya&amp;rsquo;s site-packages but got an import error. Therefore, we have to build the PySide for Maya from the ground up and this post is about the entire building process we&amp;rsquo;ve been through. Hope this note might be helpful for people who want to use PySide in Maya. :)&lt;/p&gt;

&lt;p&gt;BTW, the PySide for Maya 2012 built by vc9 can be downloaded &lt;a href=&#34;https://docs.google.com/open?id=0BwFItFJF_4j3Wm1kMDVXcWIxbW8&#34;&gt;here&lt;/a&gt;, enjoy it!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to select hard edges from a mesh in Maya?</title>
      <link>http://shihchinw.github.io/2011/10/how-to-select-hard-edges-from-a-mesh-in-maya.html</link>
      <pubDate>Sun, 23 Oct 2011 13:02:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2011/10/how-to-select-hard-edges-from-a-mesh-in-maya.html</guid>
      <description>A hard edge (aka crease edge or feature edge) is:
 shared by two polygons. and the dihedral angle (i.e the angle between two polygons) is above user-specified threshold.  To find these edges in Maya, the intuitive approach is to traverse all the edges by MItMeshEdge and examining the dot product of two adjacent faces&amp;rsquo; normals.
Suppose we have MObject(s) of target mesh and edge components (optional) selected by user, and we want to replace current selection with the hard edges from these input.</description>
    </item>
    
    <item>
      <title>How to determine direct instances in Maya?</title>
      <link>http://shihchinw.github.io/2011/10/how-to-determine-direct-instances-in-maya.html</link>
      <pubDate>Sun, 16 Oct 2011 14:47:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2011/10/how-to-determine-direct-instances-in-maya.html</guid>
      <description>&lt;p&gt;Any instanced node in Maya has multiple parent transforms, therefore, the basic idea to determine the instanced node is to check the number of its parent nodes. However, if we have &lt;span class=&#34;blue&#34;&gt;&lt;em&gt;both instanced shapes and some other transform nodes from the same hierarchy&lt;/em&gt;&lt;/span&gt;, it gets a little harder to handle this situation just by MEL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Retrieve file list from a directory tree</title>
      <link>http://shihchinw.github.io/2011/09/retrieve-file-list-from-a-directory-tree.html</link>
      <pubDate>Mon, 19 Sep 2011 14:53:00 +0000</pubDate>
      
      <guid>http://shihchinw.github.io/2011/09/retrieve-file-list-from-a-directory-tree.html</guid>
      <description>&lt;p&gt;There is a simple way to traverse a directory tree with python - &lt;code&gt;os.walk&lt;/code&gt; (os.path.walk is deprecated in 3.0, therefore, we had better avoid to use it!)
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>